package training.wcontest.wc128;

import org.junit.Test;

import static org.junit.Assert.*;

public class Solution_1014Test {
    // solution object
    Solution_1014 s = new Solution_1014();

    @Test
    public void ensure_it_works_when_input_is_1_2_3_4_5_6_7_8_9_10() {
        int result = s.shipWithinDays(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 5);

        assertEquals(15, result);
    }

    @Test
    public void ensure_it_works_when_input_is_1_2_3_4_5_6_7_8_9_10_and_1() {
        int result = s.shipWithinDays(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 1);

        assertEquals(55, result);
    }

    @Test
    public void ensure_it_works_when_input_is_3_2_2_4_1_4() {
        int result = s.shipWithinDays(new int[]{3, 2, 2, 4, 1, 4}, 3);

        assertEquals(6, result);
    }

    @Test
    public void ensure_it_works_when_input_is_1_2_3_1_1() {
        int result = s.shipWithinDays(new int[]{1, 2, 3, 1, 1}, 4);

        assertEquals(3, result);
    }

    @Test
    public void ensure_it_works_when_input_is_1_2_3_1_2() {
        int[] load = {
                254, 149, 459, 173, 329, 185, 227, 122, 396, 353, 291, 337, 39,
                318, 106, 154, 436, 265, 234, 234, 499, 499, 411, 461, 329, 292,
                475, 316, 373, 269, 265, 499, 146, 442, 265, 461, 56, 124, 194,
                275, 318, 272, 344, 405, 497, 142, 466, 212, 12, 143, 170, 417,
                95, 480, 148, 101, 104, 409, 499, 379, 172, 166, 211, 161, 375,
                105, 268, 251, 320, 259, 242, 495, 338, 486, 114, 359, 181, 270,
                168, 254, 2, 145, 123, 279, 103, 144, 74, 301, 424, 465, 223,
                493, 41, 7, 307, 423, 33, 124, 268, 493, 9, 345, 207, 14, 306,
                208, 274, 285, 383, 32, 190, 291, 389, 413, 238, 273, 148, 404,
                230, 395, 309, 280, 477, 370, 111, 144, 356, 128, 381, 307, 41,
                474, 111, 186, 181, 117, 300, 221, 198, 374, 181, 402, 30, 32,
                57, 237, 198, 21, 323, 254, 199, 66, 140, 459, 176, 275, 198,
                179, 135, 271, 306, 464, 336, 206, 462, 262, 417, 430, 479, 122,
                188, 414, 357, 179, 427, 447, 122, 56, 43, 437, 91, 241, 498,
                115, 36, 481, 21, 366, 162, 254, 38, 119, 452, 345, 419, 222,
                347, 186, 210, 79, 164, 81, 131, 445, 310, 308, 345, 374, 205,
                423, 461, 85, 41, 238, 245, 4, 209, 478, 307, 305, 100, 92, 247,
                53, 215, 429, 72, 461, 101, 13, 40, 160, 149, 88, 19, 344, 152,
                228, 460, 356, 189, 352, 33, 283, 31, 158, 122, 303, 463, 55,
                377, 444, 379, 46, 105, 27, 408, 264, 235, 259, 140, 39, 111, 91,
                452, 194, 317, 86, 176, 123, 241, 101, 114, 73, 190, 101, 383,
                274, 60, 435, 50, 26, 434, 381, 51, 214, 417, 176, 41, 431, 442,
                192, 441, 408, 56, 50, 64, 327, 180, 215, 357, 121, 91, 222, 21,
                237, 492, 42, 152, 405, 483, 425, 363, 93, 199, 310, 456, 170,
                437, 40, 276, 221, 95, 461, 102, 53, 22, 308, 426, 216, 276, 447,
                299, 178, 166, 418, 236, 277, 27, 342, 143, 167, 392, 478, 369,
                19, 278, 82, 483, 13, 375, 387, 157, 242, 41, 249, 161, 493, 45,
                397, 72, 252, 13, 163, 234, 163, 427, 341, 97, 179, 88, 425, 314,
                397, 22, 459, 244, 465, 110, 461, 71, 444, 498, 286, 62, 98, 340,
                232, 137, 180, 37, 182
        };

        int result = s.shipWithinDays(load, 196);

        assertEquals(657, result);
    }


}